from dotenv import load_dotenv
import os
import sys
from langchain.prompts import ChatPromptTemplate
from langchain_google_genai import GoogleGenerativeAI
from langchain.schema import StrOutputParser
import streamlit as st

load_dotenv()

chave_api = os.getenv("GOOGLE_API_KEY")

os.environ['PYTHONIOENCODING'] = 'utf-8'
sys.stdout.reconfigure(encoding='utf-8')
sys.stderr.reconfigure(encoding='utf-8')

def criar_template_do_prompt():

    template = """
    Voc√™ √© um professor especialista em criar quest√µes em todos os campos de conhecimento.
    Pense passo a passo e elabore uma avalia√ß√£o com {quantidade} quest√µes do tipo {tipo}, da disciplina {disciplina},
    para alunos do {serie}, sobre o conte√∫do {conteudo} e com n√≠vel de dificuldade {dificuldade}.

    O formato das quest√µes √© um dos seguintes:
    - M√∫ltipla Escolha:
    - Quest√µes:
        <Quest√£o1>: 
            <a. Resposta 1></n>
            <b. Resposta 2></n>
            <c. Resposta 3></n>
            <d. Resposta 4></n>
        <Quest√£o2>: 
            <a. Resposta 1></n>
            <b. Resposta 2></n>
            <c. Resposta 3></n>
            <d. Resposta 4></n>
        ...
    - Respostas:
        <Resposta1>: <a|b|c|d>.</n> Justificativa.
        <Resposta2>: <a|b|c|d>.</n> Justificativa.
        ...
    Observa√ß√£o: Quest√µes de m√∫ltipla escolha para alunos do ensino m√©dio devem possuir 5 alternativas.
    - Exemplo:
    - Quest√µes:
    - 1. Qual √© a complexidade de tempo de uma √°rvore de pesquisa bin√°ria balanceada?
        a. O(n)</n>
        b. O(log n)</n>
        c. O(n^2)</n>
        d. O(1)</n>
    - Respostas: 
        1. b.</n>
        Justificativa: A complexidade de tempo de opera√ß√µes em uma √°rvore de pesquisa bin√°ria balanceada √© ùëÇ(log ùëõ) porque a altura da √°rvore √© proporcional a log ùëõ, permitindo buscas, inser√ß√µes e remo√ß√µes em tempo logar√≠tmico.
    - Verdadeiro ou Falso:
    - Quest√µes:
        <Quest√£o1>: <Verdadeiro|Falso>
        <Quest√£o2>: <Verdadeiro|Falso>
            .....
    - Respostas:
        <Resposta1>: <Verdadeiro|Falso>
        <Resposta2>: <Verdadeiro|Falso>
            ...
    - Discursiva:
    - Quest√µes:
        <Quest√£o1>:
        <Quest√£o2>:
        ...
    - Respostas:
        <Resposta1>:
        <Resposta2>:
        ...
    """

    prompt = ChatPromptTemplate.from_template(template)
    prompt.format(quantidade=4, tipo="M√∫ltipla Escolha", disciplina="Ci√™ncias", serie="4¬∫ Ano do Ensino Fundamental", conteudo="Microrganismos", dificuldade="M√©dio")

    return prompt

def criar_chain(prompt_template, llm, chave_api):
    return prompt_template | llm | StrOutputParser()

def main():
    st.title("Gerador de Quest√µes")
    st.write("Crie quest√µes diversas e originais com praticidade.")
    prompt_template = criar_template_do_prompt()
    llm = GoogleGenerativeAI(temperature=0.7, model="gemini-1.5-flash")
    chain = criar_chain(prompt_template, llm, chave_api)
    quantidade = st.number_input("Escolha a quantidade de quest√µes", min_value=1, max_value=10, value=4)
    tipo = st.selectbox("Escolha o tipo de quest√£o", ("M√∫ltipla Escolha", "Verdadeiro ou Falso", "Discursiva"))
    disciplina = st.selectbox("Escolha a disciplina", 
                              ("Portugu√™s", "Matem√°tica", "Geografia", "Hist√≥ria", "Ci√™ncias", "Biologia", "Qu√≠mica", "F√≠sica",
                               "Sociologia", "Filosofia", "Educa√ß√£o F√≠sica"))
    serie = st.selectbox("Escolha a s√©rie dos alunos", ("1¬∫ Ano do Ensino Fundamental",
                                                        "2¬∫ Ano do Ensino Fundamental",
                                                        "3¬∫ Ano do Ensino Fundamental",
                                                        "4¬∫ Ano do Ensino Fundamental",
                                                        "5¬∫ Ano do Ensino Fundamental",
                                                        "6¬∫ Ano do Ensino Fundamental",
                                                        "7¬∫ Ano do Ensino Fundamental",
                                                        "8¬∫ Ano do Ensino Fundamental",
                                                        "9¬∫ Ano do Ensino Fundamental",
                                                        "1¬∫ Ano do Ensino M√©dio",
                                                        "2¬∫ Ano do Ensino M√©dio",
                                                        "3¬∫ Ano do Ensino M√©dio"))
    conteudo = st.text_area("Digite o conte√∫do das quest√µes")
    dificuldade = st.selectbox("Selecione o n√≠vel de dificuldade", ("F√°cil", "M√©dio", "Dif√≠cil"))

    if st.button("Gerar Quest√µes"):
        resposta = chain.invoke({"quantidade":quantidade, "tipo":tipo, "disciplina":disciplina, "serie":serie, "conteudo":conteudo, "dificuldade":dificuldade})
        st.write("Quest√µes geradas!")
        st.write(resposta)

if __name__ == "__main__":
    main()
    